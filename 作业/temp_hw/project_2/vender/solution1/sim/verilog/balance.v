// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="balance_balance,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.978000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=20,HLS_VERSION=2022_2}" *)

module balance (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sum_i,
        sum_o,
        sum_o_ap_vld,
        cash,
        tissue,
        tissue_ap_vld
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] sum_i;
output  [2:0] sum_o;
output   sum_o_ap_vld;
input  [1:0] cash;
output  [1:0] tissue;
output   tissue_ap_vld;

reg[2:0] sum_o;
reg sum_o_ap_vld;
reg tissue_ap_vld;

wire   [1:0] cash_read_read_fu_40_p2;
wire   [2:0] sum_read_read_fu_46_p2;
wire    ap_ce_reg;

always @ (*) begin
    if ((((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd0) & (cash_read_read_fu_40_p2 == 2'd1)) | ((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd1) & (cash_read_read_fu_40_p2 == 2'd0)))) begin
        sum_o = 3'd1;
    end else if ((((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd1) & (cash_read_read_fu_40_p2 == 2'd1)) | ((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd2) & (cash_read_read_fu_40_p2 == 2'd0)))) begin
        sum_o = 3'd2;
    end else if ((((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd0) & (cash_read_read_fu_40_p2 == 2'd0)) | ((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd2) & (cash_read_read_fu_40_p2 == 2'd1)))) begin
        sum_o = 3'd0;
    end else begin
        sum_o = sum_i;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd0) & (cash_read_read_fu_40_p2 == 2'd0)) | ((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd0) & (cash_read_read_fu_40_p2 == 2'd1)) | ((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd1) & (cash_read_read_fu_40_p2 == 2'd0)) | ((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd1) & (cash_read_read_fu_40_p2 == 2'd1)) | ((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd2) & (cash_read_read_fu_40_p2 == 2'd0)) | ((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd2) & (cash_read_read_fu_40_p2 == 2'd1)))) begin
        sum_o_ap_vld = 1'b1;
    end else begin
        sum_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (sum_read_read_fu_46_p2 == 3'd2) & (cash_read_read_fu_40_p2 == 2'd1))) begin
        tissue_ap_vld = 1'b1;
    end else begin
        tissue_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign cash_read_read_fu_40_p2 = cash;

assign sum_read_read_fu_46_p2 = sum_i;

assign tissue = 2'd1;

endmodule //balance
